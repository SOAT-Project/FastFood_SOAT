CREATE TYPE "order_status" AS ENUM (
  'RECEIVED',
  'IN_PREPARATION',
  'READY',
  'COMPLETED'
);

CREATE TYPE "payment_status" AS ENUM (
  'PENDING',
  'APPROVED',
  'IN_PROCESS',
  'REJECTED',
  'CANCELLED'
);

CREATE TYPE "role" AS ENUM ('ADMIN', 'EMPLOYEE');

CREATE TABLE "clients" (
   "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
   "public_id" uuid NOT NULL,
   "name" varchar(100),
   "email" varchar(100),
   "cpf" varchar(11),
   "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "deleted_at" timestamp
);

CREATE TABLE "orders" (
   "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
   "public_id" uuid NOT NULL,
   "value" decimal,
   "order_number" int,
   "status" order_status,
   "client_id" int,
   "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "deleted_at" timestamp
);

CREATE TABLE "order_products" (
   "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
   "value" decimal,
   "order_id" int,
   "product_id" int,
   "quantity" int,
   "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "deleted_at" timestamp
);

CREATE TABLE "products" (
   "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
   "value" decimal,
   "name" varchar,
   "description" varchar(500),
   "image_url" varchar(500),
   "product_category_id" int,
   "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "deleted_at" timestamp
);

CREATE TABLE "product_categories" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "name" varchar,
  "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
  "deleted_at" timestamp
);

CREATE TABLE "payments" (
   "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
   "value" decimal,
   "external_reference" varchar(100),
   "qr_code" text,
   "order_id" int,
   "status" payment_status,
   "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "deleted_at" timestamp
);

CREATE TABLE "staff" (
   "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
   "name" varchar(100),
   "email" varchar(100),
   "cpf" varchar(11),
   "is_active" boolean,
   "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "deleted_at" timestamp
);

CREATE TABLE "staff_roles" (
   "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
   "staff_id" int,
   "role_id" int,
   "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "deleted_at" timestamp
);

CREATE TABLE "roles" (
   "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
   "role_name" role,
   "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
   "deleted_at" timestamp
);

ALTER TABLE
   "orders"
   ADD
   FOREIGN KEY ("client_id") REFERENCES "clients" ("id");

ALTER TABLE
   "order_products"
   ADD
   FOREIGN KEY ("order_id") REFERENCES "orders" ("id");

ALTER TABLE
   "order_products"
   ADD
   FOREIGN KEY ("product_id") REFERENCES "products" ("id");

ALTER TABLE
   "products"
   ADD
   FOREIGN KEY ("product_category_id") REFERENCES "product_categories" ("id");

ALTER TABLE
   "payments"
   ADD
   FOREIGN KEY ("order_id") REFERENCES "orders" ("id");

ALTER TABLE
   "staff_roles"
   ADD
   FOREIGN KEY ("staff_id") REFERENCES "staff" ("id");

ALTER TABLE
   "staff_roles"
   ADD
   FOREIGN KEY ("role_id") REFERENCES "roles" ("id");


CREATE
OR REPLACE FUNCTION update_timestamp()
   RETURNS TRIGGER AS $$
BEGIN
   NEW.updated_at = CURRENT_TIMESTAMP;
RETURN NEW;
END;
$$ LANGUAGE plpgsql;


DO $$
DECLARE
tbl_name text;
BEGIN
FOR tbl_name IN
SELECT table_name
FROM information_schema.columns WHERE column_name = 'updated_at'
   LOOP
   EXECUTE format(
   'CREATE TRIGGER set_updated_at_%I
   BEFORE UPDATE ON %I
   FOR EACH ROW
   EXECUTE FUNCTION update_timestamp();',
   tbl_name,
   tbl_name
  );
END LOOP;
END;
$$;