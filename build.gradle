plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'soat-project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

bootJar {
	archiveFileName = 'app.jar'
}

jar {
	enabled = false
}

repositories {
	mavenCentral()
}

sourceSets {
	testIntegration {
		java {
			srcDir file('src/testIntegration/java')
		}
		resources {
			srcDir file('src/testIntegration/resources')
		}
		compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
		runtimeClasspath += output + compileClasspath
	}
}

apply from: 'gradle/test-integration.gradle'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	runtimeOnly 'org.postgresql:postgresql'

	// Json Web Token (JWT)
	implementation('io.jsonwebtoken:jjwt-api:0.12.5')
	runtimeOnly('io.jsonwebtoken:jjwt-impl:0.12.5')
	runtimeOnly('io.jsonwebtoken:jjwt-jackson:0.12.5')

	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Testcontainers para PostgreSQL
	testImplementation("org.testcontainers:junit-jupiter:1.19.7")
	testImplementation("org.testcontainers:postgresql:1.19.7")

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}